{"version":3,"sources":["api/index.js","components/IndiaChart.js","components/IndiaVaccine.js","components/StateVaccine.js","App.js","index.js"],"names":["fetchDataForChart","a","axios","get","data","console","log","fetchVaccineDataIndiaDaily","fetchVaccineDataState","fetchParticularState","code","IndiaChart","useState","dailyDate","setDailyDate","dailyTotal","setDailyTotal","dailyDeath","setDailyDeath","dailyRecovered","setDailyRecovered","useEffect","res","date","infected","death","recovered","index","length","element","push","day","summary","total","deaths","discharged","fetchAPI","lineChartForIndia","width","height","labels","datasets","label","borderColor","fill","options","maintainAspectRatio","IndiaVaccine","vaccineIndiaTotal","setVaccineIndiaTotal","vaccineIndiaDate","setVaccineIndiaDate","vaccineFullyVaccinated","setVaccineFullyVaccinated","totalDoses","totalVaccinated","totalFullyVaccinated","total_doses","total_vaccinated","total_fully_vaccinated","fetchVaccineDaily","lineChartForVaccineIndia","StateVaccine","stateDate","setStateDate","stateTotal","setStateTotal","stateData","setStateData","arr","state","stateCode","state_code","fetchState","handleStateChange","val","sCode","dates","totalv","forEach","el","lineChartForParticularState","style","display","margin","justifyContent","alignItems","onChange","e","target","value","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a882ac00.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchDataForChart =async()=>{\r\n    try {\r\n        const { data } = await axios.get(`https://api.rootnet.in/covid19-in/stats/history`);\r\n        return { data };\r\n    } catch (error) {\r\n        console.log('error in fetching fetchDataForChart');\r\n    }\r\n}\r\n\r\nexport const fetchVaccineDataIndiaDaily =async()=>{\r\n    try {\r\n        const { data } = await axios.get(`https://india-covid19vaccine.github.io/api/national_timeline.json`);\r\n        return { data };\r\n    } catch (error) {\r\n        console.log('error in fetching fetchGlobalDataForChart');\r\n    }\r\n}\r\n\r\nexport const fetchVaccineDataState =async()=>{\r\n    try {\r\n        const { data } = await axios.get(`https://india-covid19vaccine.github.io/api/state_latest.json`);\r\n        return { data };\r\n    } catch (error) {\r\n        console.log('error in fetching fetchGlobalDataForChart');\r\n    }\r\n}\r\n\r\nexport const fetchParticularState =async(code)=>{\r\n    try {\r\n        const { data } = await axios.get(`https://india-covid19vaccine.github.io/api/${code}.json`);\r\n        return { data };\r\n    } catch (error) {\r\n        console.log('error in fetching fetchParticularState');\r\n    }\r\n}\r\n\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport {fetchDataForChart} from '../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst IndiaChart =()=>{\r\n    const [dailyDate, setDailyDate] = useState([]);\r\n    const [dailyTotal, setDailyTotal] = useState([]);\r\n    const [dailyDeath, setDailyDeath] = useState([]);\r\n    const [dailyRecovered, setDailyRecovered] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=>{\r\n            const res = await fetchDataForChart();\r\n            const date = [];\r\n            const infected=[];\r\n            const death =[];\r\n            const recovered =[];\r\n            for (let index = 0; index < res.data.data.length; index++) {\r\n                const element = res.data.data[index];\r\n                date.push(element.day);\r\n                infected.push(element.summary.total);\r\n                death.push(element.summary.deaths);\r\n                recovered.push(element.summary.discharged);\r\n            }\r\n            setDailyDate(date);\r\n            setDailyTotal(infected);\r\n            setDailyDeath(death);\r\n            setDailyRecovered(recovered);\r\n        }\r\n        fetchAPI();\r\n    },[])\r\n\r\n    const lineChartForIndia=(\r\n    \r\n        (<Line\r\n            width={100}\r\n            height={400}\r\n        data={{\r\n            labels: dailyDate,\r\n            datasets:[{label:\"Infected\",\r\n        data:dailyTotal,\r\n        borderColor:'#3333ff',\r\n        fill:true\r\n    },\r\n    {label:\"Deaths\",\r\n    data:dailyDeath,\r\n    borderColor:'red',\r\n    fill:true},\r\n    {\r\n        label:\"Recovered\",\r\n        data:dailyRecovered,\r\n    }],\r\n        }}\r\n        options={{ maintainAspectRatio: false }}\r\n        />) );\r\n    return(\r\n        <div>\r\n        <h2>India Coronavirus Cases</h2>\r\n        <div>{lineChartForIndia}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaChart;","import { useEffect, useState } from \"react\";\r\nimport {fetchVaccineDataIndiaDaily} from '../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst IndiaVaccine=()=>{\r\nconst [vaccineIndiaTotal, setVaccineIndiaTotal]=useState([]);\r\nconst [vaccineIndiaDate, setVaccineIndiaDate]=useState([]);\r\nconst [vaccineFullyVaccinated,setVaccineFullyVaccinated]=useState([]);\r\n\r\nuseEffect(()=>{\r\n    const fetchVaccineDaily = async ()=>{\r\n        const res = await fetchVaccineDataIndiaDaily();\r\n        const date = [];\r\n        const totalDoses= [];\r\n        const totalVaccinated = [];\r\n        const totalFullyVaccinated=[];\r\n        \r\n        for (let index = 0; index < res.data.length; index++) {\r\n            const element = res.data[index];\r\n            date.push(element.date);\r\n            totalDoses.push(element.total_doses);\r\n            totalVaccinated.push(element.total_vaccinated);\r\n            totalFullyVaccinated.push(element.total_fully_vaccinated);\r\n        }\r\n      setVaccineIndiaTotal(totalDoses);\r\n      setVaccineIndiaDate(date);\r\n      setVaccineFullyVaccinated(totalFullyVaccinated);  \r\n    }\r\n    fetchVaccineDaily();\r\n    \r\n    \r\n},[]);\r\n\r\nconst lineChartForVaccineIndia=(\r\n\r\n    (<Line\r\n    width={100}\r\n    height={400}\r\n    data={{\r\n        labels: vaccineIndiaDate,\r\n        datasets:[{label:\"Total Vaccines Administered\",\r\n    data:vaccineIndiaTotal,\r\n    borderColor:'#3333ff',\r\n    fill:true\r\n},\r\n{\r\n    label:\"Fully Vaccinated\",\r\n    data:vaccineFullyVaccinated,\r\n    borderColor:''\r\n}\r\n],\r\n    }}\r\n    options={{ maintainAspectRatio: false }}\r\n    />) );\r\n\r\n    return(\r\n        <div>\r\n<h2>Vaccine Trend India</h2>\r\n        <div>{lineChartForVaccineIndia}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaVaccine;","import {fetchParticularState,fetchVaccineDataState} from '../api';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst StateVaccine=()=>{\r\n    const [stateDate, setStateDate] = useState([]);\r\n    const [stateTotal, setStateTotal] = useState([]);\r\n    const [stateData,setStateData]= useState([]);\r\n    useEffect(()=>{\r\n    const fetchState= async()=>{\r\n        const res = await fetchVaccineDataState();\r\n        const arr= [];\r\n        for (let index = 0; index < res.data.length; index++) {\r\n            const element = res.data[index];\r\n            arr.push({state:element.state,\r\n            stateCode:element.state_code})\r\n        }\r\n        setStateData(arr);\r\n    }\r\n    fetchState();\r\n    },[])\r\n    \r\n    const handleStateChange=  async (val)=>{\r\n        let sCode='';\r\n        let res=[];\r\n        const dates=[];\r\n        const totalv=[];\r\n        stateData.forEach((el)=>{\r\n            if(val===el.state){\r\n                sCode = el.stateCode;\r\n            }\r\n            })\r\n    res= await fetchParticularState(sCode);\r\n    \r\n    for (let index = 0; index < res.data.length; index++) {\r\n        const element = res.data[index];\r\n        dates.push(element.date);\r\n        totalv.push(element.total_vaccinated);\r\n        \r\n    }\r\n    \r\n    setStateDate(dates);\r\n    setStateTotal(totalv);\r\n    \r\n    }\r\n    const lineChartForParticularState=(\r\n    \r\n        (<Line\r\n        width={100}\r\n        height={400}\r\n        data={{\r\n            labels: stateDate,\r\n            datasets:[{label:\"Total Vaccines Administered\",\r\n        data:stateTotal,\r\n        borderColor:'#3333ff',\r\n        fill:true\r\n    },\r\n    ],\r\n        }}\r\n        options={{ maintainAspectRatio: false }}\r\n        />) );\r\nreturn(\r\n    <div>\r\n        <div style={{display: 'flex',\r\n        margin:'50px',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        }}>\r\n        <select onChange={(e)=>handleStateChange(e.target.value)}>\r\n        {stateData.map((el)=><option key={el.state}>{el.state}</option>)}\r\n        </select>\r\n        </div>\r\n        <h2>Vaccine for Particular state in India</h2>\r\n        <div>{lineChartForParticularState}</div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default StateVaccine;","import IndiaChart from './components/IndiaChart';\r\nimport IndiaVaccine from './components/IndiaVaccine';\r\nimport StateVaccine from './components/StateVaccine';\r\n\r\nconst App=()=>{\r\n    \r\n    return(\r\n        <div>\r\n            <IndiaChart/>\r\n            <IndiaVaccine/>\r\n            <StateVaccine/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n"],"sourceRoot":""}